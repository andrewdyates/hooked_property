hooked_property
Hooked Property class for Google App Engine Python Datastore.

http://github.com/andrewdyates/hooked_property
git@github.com:andrewdyates/hooked_property.git

Copyright © 2010 Andrew D. Yates
All Rights Reserved.
===

HookedProperty adds model instance logic to properties. This is useful
because a model instance's property value may depend on the values of
other properties of that model instance and because properties
inherited from polymodel ancestors may represent different
abstractions with despite sharing a data type.

I intend Hooked Property to be used in db.polymodel.PolyModel model
hierarchies. For "Table of Properties" style of properties, see App
Engine Tycoon (aetycoon) by Αλκης Ευλογημένος and Nick Johnson: it has
all the properties you'll ever need.

References:
  http://github.com/Arachnid/aetycoon
  http://blog.notdot.net/2009/9/Custom-Datastore-Properties-1-DerivedProperty

Hooks are model instance functions which return a value and accept at
least two arguments: `self` and the value passed to set the property.

Example 1: Hooked Property
>>> class Label(polymodel.PolyModel):
...   name = HookedProperty(set_hook="set_name")
...   aliases = db.StringListProperty()
...   def set_name(self, value):
...     self.aliases = list(set((value, value.lower())))
...     return value

Example 2: Inherit Property, Override Hook
>>> class SexLabel(Label):
...   def set_name(self, property, value, *args, **kwds):
...     value = value.upper()[0]
...     if value not in ('M', 'F', 'O',):
...       raise ValueError("'%s' cannot be a SexLabel" % value)
...     return super(SexLabel, self).set_name(value)
